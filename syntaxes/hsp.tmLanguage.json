{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "HSP",
    "patterns": [
        { "include": "#code" }
    ],
    "repository": {
        "code": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#statement"
                }
            ],
            "repository": {
                "preprocessors": {
                    "patterns": [
                        {
                            "name": "meta.preprocessor",
                            "match": "\\#[\\w]+"
                        }
                    ]
                },
                "keywords": {
                    "patterns": [{
                        "name": "keyword.control.hsp",
                        "match": "\\b(if|else|while|for|return|repeat|loop|goto|gosub)\\b"
                    }]
                },
                "types": {
                    "patterns": [
                        {
                            "name": "support.type.hsp",
                            "match": "\\b(int|str)\\b"
                        }
                    ]
                },
                "statement": {
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#multistatement"
                        }
                    ],
                    "repository": {
                        "multistatement_nest": {
                            "patterns": [
                                {
                                    "include": "#comments"
                                },
                                {
                                    "include": "#strings"
                                },
                                {
                                    "match": "\\s*(\\S+?)(\\s+?.*?)??(\\s*:.*)??$",
                                    "captures": {
                                        "1": { "patterns": [
                                            {"include": "#comments"},
                                            {"include": "#labels"},
                                            {"include": "#preprocessors"},
                                            {"include": "#types"},
                                            {"include": "#keywords"},
                                            {"include": "#strings"},
                                            {"include": "#otherpatterns"}
                                        ]},
                                        "2": { "patterns": [
                                            {"include": "#labels"},
                                            {"include": "#keywords"},
                                            {"include": "#parameters"}
                                        ]},
                                        "3": {"patterns": [{"include": "#multistatement_nest"}]}
                                    }
                                },
                                {
                                    "match": "\\s*(\\S+?)(\\s+?.*?)??$",
                                    "captures": {
                                        "1": { "patterns": [
                                            {"include": "#comments"},
                                            {"include": "#labels"},
                                            {"include": "#preprocessors"},
                                            {"include": "#types"},
                                            {"include": "#keywords"},
                                            {"include": "#strings"},
                                            {"include": "#otherpatterns"}
                                        ]},
                                        "2": { "patterns": [
                                            {"include": "#labels"},
                                            {"include": "#keywords"},
                                            {"include": "#parameters"}
                                        ]}
                                    }
                                }
                            ]
                        },
                        "multistatement": {
                            "patterns": [
                                {
                                    "match": "\\s*(\\S+?)(\\s+?.*?)??\\s*:(.*)??$",
                                    "captures": {
                                        "1": { "patterns": [
                                            {"include": "#comments"},
                                            {"include": "#labels"},
                                            {"include": "#preprocessors"},
                                            {"include": "#types"},
                                            {"include": "#keywords"},
                                            {"include": "#strings"},
                                            {"include": "#otherpatterns"}
                                        ]},
                                        "2": { "patterns": [
                                            {"include": "#labels"},
                                            {"include": "#keywords"},
                                            {"include": "#parameters"}
                                        ]},
                                        "3": {"patterns": [{"include": "#multistatement_nest"}]}
                                    }
                                },
                                {
                                    "match": "\\s*(\\S+?)(\\s+?.*?)??\\s*$",
                                    "captures": {
                                        "1": { "patterns": [
                                            {"include": "#comments"},
                                            {"include": "#labels"},
                                            {"include": "#preprocessors"},
                                            {"include": "#types"},
                                            {"include": "#keywords"},
                                            {"include": "#strings"},
                                            {"include": "#otherpatterns"}
                                        ]},
                                        "2": { "patterns": [
                                            {"include": "#labels"},
                                            {"include": "#keywords"},
                                            {"include": "#parameters"}
                                        ]},
                                        "3": {"patterns": [{"include": "#multistatement_nest"}]}
                                    }
                                }
                            ]
                        },
                        "otherpatterns": {
                            "patterns": [
                                {"match": "\\b[a-zA-z\u3040-\u31ff\u3400-\u9fff\uf900-\ufaff][0-9a-zA-z\u3040-\u31ff\u3400-\u9fff\uf900-\ufaff]*\\b", "name": "entity.name.function"}
                            ]
                        }
                    }
                },
                "strings": {
                    "patterns":[
                        {
                            "name": "string.quoted.double.hsp",
                            "begin": "\"",
                            "end": "\""
                        }
                    ]
                },
                "parameters": {
                    "patterns": [
                        {
                            "include": "#numeric"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#variables"
                        }
                    ],
                    "repository": {
                        "numeric": {
                            "patterns": [
                                {
                                    "name": "constant.numeric",
                                    "match": "\\b-?[0-9]+\\b"
                                }
                            ]
                        },
                        "variables": {
                            "patterns": [
                                {
                                    "name": "variable.parameter",
                                    "match": "\\b[a-zA-z\u3040-\u31ff\u3400-\u9fff\uf900-\ufaff][0-9a-zA-z\u3040-\u31ff\u3400-\u9fff\uf900-\ufaff]*\\b"
                                }
                            ]
                        }
                    }
                },
                "labels": {
                    "patterns": [
                        {
                            "match": "^\\s*?(\\*\\w+)\\b",
                            "captures": {
                                "1": {"name": "entity.name.class.hsp"}
                            }
                        },
                        {
                            "match": "\\b(goto|gosub)\\s+(\\*\\w+)\\b",
                            "captures": {
                                "1": {"name": "keyword.control.hsp"},
                                "2": {"name": "entity.name.class.hsp"}
                            }
                        }
                    ]
                },
                "defined_statements": {
                    "patterns": [
                    ]
                },
                "comments":{
                    "patterns": [
                        {
                            "include": "#semicoloncomment"
                        },
                        {
                            "include": "#doubleslashcomment"
                        },
                        {
                            "include": "#blockcomment"
                        }
                    ],
                    "repository": {
                        "semicoloncomment": {
                            "patterns": [
                                {
                                    "match": "^(.*)(;.*)$",
                                    "captures": {
                                        "1": { "patterns": [{"include": "#code"}]},
                                        "2": { "name": "comment.line"}
                                    }
                                }
                            ]
                        },
                        "doubleslashcomment": {
                            "patterns": [
                                {
                                    "match": "^(.*)(//.*)$",
                                    "captures": {
                                        "1": { "patterns": [{"include": "#code"}]},
                                        "2": { "name": "comment.line.double-slash"}
                                    }
                                }
                            ]
                        },
                        "blockcomment": {
                            "patterns": [
                                {
                                    "name": "comment.block",
                                    "begin": "/\\*",
                                    "end": "\\*/"
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
	"scopeName": "source.hsp"
}