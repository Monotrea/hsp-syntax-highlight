{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "HSP",
    "patterns": [
        { "include": "#comments"},
        { "include": "#code" }
    ],
    "repository": {
        "colons": {
            "patterns": [
                { "include": "#comments" },
                {
                    "match": "(+):(.+)",
                    "captures": {
                        "1": {"patterns": [{"include": "#comments"}, {"include": "#code"}]},
                        "2": {"patterns": [{"include": "#comments"}, {"include": "#code"}]}
                    }
                }
            ]
        },
        "comments":{
            "patterns": [
                {
                    "include": "#semicoloncomment"
                },
                {
                    "include": "#doubleslashcomment"
                },
                {
                    "include": "#blockcomment"
                }
            ],
            "repository": {
                "semicoloncomment": {
                    "patterns": [
                        {
                            "name": "comment.line",
                            "match": ";.*"
                        }
                    ]
                },
                "doubleslashcomment": {
                    "patterns": [
                        {
                            "name": "comment.line.double-slash",
                            "match": "//.*"
                        }
                    ]
                },
                "blockcomment": {
                    "patterns": [
                        {
                            "name": "comment.block",
                            "begin": "/\\*",
                            "end": "\\*/"
                        }
                    ]
                }
            }
        },
        "code": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#preprocessors"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#types"
                },
                {
                    "include": "#statement"
                },
                {
                    "include": "#parameters"
                },
                {
                    "include": "#labels"
                }
            ],
            "repository": {
                "preprocessors": {
                    "patterns": [
                        {
                            "name": "meta.preprocessor",
                            "match": "\\#[\\w]+"
                        }
                    ]
                },
                "keywords": {
                    "patterns": [{
                        "name": "keyword.control.hsp",
                        "match": "\\b(if|else|while|for|return|repeat|loop|goto|gosub)\\b"
                    }]
                },
                "types": {
                    "patterns": [
                        {
                            "name": "support.type.hsp",
                            "match": "\\b(int|str)\\b"
                        }
                    ]
                },
                "statement": {
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#multistatement"
                        },
                        {
                            "include": "#singlestatement"
                        },
                        {
                            "include": "#colons"
                        }
                    ],
                    "repository": {
                        "singlestatement": {
                            "patterns": [
                                {
                                    "name": "support.function",
                                    "match": "\\b\\w+\\b"
                                }
                            ]
                        },
                        "multistatement": {
                            "patterns": [
                                {
                                    "match": "(\\w+)\\s+(.+)",
                                    "captures": {
                                        "1": { "patterns": [{"name": "support.function"}] },
                                        "2": { "patterns": [{"include": "#parameters"}, {"include": "#comments"}] }
                                    }
                                }
                            ]
                        }
                    }
                },
                "parameters": {
                    "patterns": [
                        {
                            "include": "#numeric"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#variables"
                        }
                    ],
                    "repository": {
                        "numeric": {
                            "patterns": [
                                {
                                    "name": "constant.numeric",
                                    "match": "\\b-?[0-9]+\\b"
                                }
                            ]
                        },
                        "strings": {
                            "name": "string.quoted.double.hsp",
                            "begin": "\"",
                            "end": "\"",
                            "patterns": [
                                {
                                    "name": "constant.character.escape.hsp",
                                    "match": "\\\\."
                                }
                            ]
                        },
                        "variables": {
                            "patterns": [
                                {
                                    "name": "variable.parameter",
                                    "match": "\\b[a-zA-z\u3040-\u31ff\u3400-\u9fff\uf900-\ufaff][0-9a-zA-z\u3040-\u31ff\u3400-\u9fff\uf900-\ufaff]*"
                                }
                            ]
                        }
                    }
                },
                "labels": {
                    "patterns": [
                        {
                            "name": "entity.name.class",
                            "match": "\\*\\w+\\b"
                        }
                    ]
                }
            }
        }
    },
	"scopeName": "source.hsp"
}